<?xml version="1.0" encoding="UTF-8"?>
<HomePageComponent xmlns="http://soap.sforce.com/2006/04/metadata">
    <body>/**&amp;nbsp;* (c) Tony Scott. Licensed under a Creative Commons Attribution 3.0 Unported License.&amp;nbsp;* 				 &amp;nbsp; http://creativecommons.org/licenses/by/3.0/deed.en_US&amp;nbsp;*&amp;nbsp;* This software is provided as is, at your own risk and without warranty of any kind.&amp;nbsp;*&amp;nbsp;* Please visit my blog: http://meltedwires.com/ and &apos;like&apos; if you&apos;ve found this useful.&amp;nbsp;*&amp;nbsp;* Original ReadCookie function was copied from a code sample posted by Ron Hess.&amp;nbsp;&amp;nbsp;* ( http://forums.sforce.com/t5/forums/forumtopicprintpage/board-id/general_development/message-id/7209/print-single-message/false/page/1 )&amp;nbsp;*&amp;nbsp;&amp;nbsp;*/&lt;script src=&quot;/soap/ajax/28.0/connection.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/soap/ajax/28.0/apex.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt;		/* Document Ready */		$(document).ready(function() {			/* Hide the Sidebar component */			$(&apos;#ConditionalButtonsComponent&apos;).closest(&apos;.sidebarModule&apos;).hide();		});		/* Window Loaded */		$(window).load(function() {			/* Namespaced Javascript functions */			var TS = 			{				hideButtons: function()				{					/* Get the object Id of the detail page */					var objectId = window.sfdcPage.entityId;					/* If we have an object id, we can pass it to the webservice */					if (typeof objectId != &apos;undefined&apos;)					{						/* Extract the Session Id from the page cookie */						var sid = TS.readCookie(&apos;sid&apos;);						sforce.connection.sessionId = sid;						/* Make an asynchronus call to the webservice */						sforce.apex.execute(&apos;ConditionSetWebService&apos;,											&apos;getHiddenButtons&apos;, 											{Id: objectId},											{												onSuccess: TS.doHide,												onFailure: function(error) { TS.logToConsole(error); }											});					}				},				doHide: function(response)				{					var responseObject = JSON.parse(response);					for (var i = 0; i &lt; responseObject.HiddenButtons.length; i++)					{						var button = responseObject.HiddenButtons[i].toLowerCase();						if (responseObject.HideOption == &apos;Disable&apos;)						{							$(&apos;input[name=&quot;&apos; + button + &apos;&quot;]&apos;).attr(&apos;disabled&apos;, &apos;disabled&apos;).fadeTo(&apos;fast&apos;, 0.4);						}						else						{							$(&apos;input[name=&quot;&apos; + button + &apos;&quot;]&apos;).hide();							}											}				},				/**				 * readCookie function by Ron Hess				 */				readCookie: function(name)				{					var nameEQ = name + &quot;=&quot;;										var ca = document.cookie.split(&apos;;&apos;);										for(var i = 0; i &lt; ca.length; i++)					{						var c = ca[i];						while (c.charAt(0) == &apos; &apos;)						{							c = c.substring(1, c.length);						}						if (c.indexOf(nameEQ) == 0)						{							return c.substring(nameEQ.length, c.length);						}					}					return null;				},				/**				 * Chrome only				 */				logToConsole: function(message)				{					if(typeof console == &quot;object&quot;)					{						console.log(message);					}				}			};			/* Hide the buttons */			TS.hideButtons();		});&lt;/script&gt;&lt;span id=&quot;ConditionalButtonsComponent&quot;&gt;Conditional Buttons&lt;/span&gt;</body>
    <pageComponentType>htmlArea</pageComponentType>
    <width>narrow</width>
</HomePageComponent>
